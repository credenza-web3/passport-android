package com.credenza3.credenzapassport.contracts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.2.
 */
@SuppressWarnings("rawtypes")
public class SellableMetadataMembershipContract extends Contract {
    public static final String BINARY = "0x60806040523480156200001157600080fd5b5062000026620000206200002c565b62000062565b62000169565b6000601436108015906200004a57506003546001600160a01b031633145b156200005d575060131936013560601c90565b503390565b600154158015906200008457503360009081526020819052604090205460ff16155b15620000e15760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b606482015260840160405180910390fd5b6001600160a01b03811660009081526020819052604090205460ff1615620001065750565b6001600160a01b03166000818152602081905260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b611e2980620001796000396000f3fe6080604052600436106102305760003560e01c8063724e5c171161012e578063bb7b4036116100ab578063da7422281161006f578063da742228146106e2578063e1461f1214610702578063ec6be06e1461072f578063f17fa44e1461074f578063fb989cea1461076f57600080fd5b8063bb7b403614610646578063ce1b815f14610666578063d1eff89514610684578063d36223f1146106a2578063d93f5bed146106c257600080fd5b8063a0e67e2b116100f2578063a0e67e2b1461058b578063adfadad3146105a0578063b33a599f146105cd578063b3d68181146105ed578063b68de9741461060d57600080fd5b8063724e5c17146104f65780638003e27f1461051657806380dc439e1461053857806388d0f86a1461054b57806390c3f38f1461056b57600080fd5b806338a8f569116101bc57806353c324771161018057806353c3247714610452578063572b6c0514610467578063578680be146104965780635b64bed0146104b65780637065cb48146104d657600080fd5b806338a8f569146103b25780633a932dba146103d25780633de4fdc8146103f2578063502ccb091461041257806351ae4cd31461043257600080fd5b8063173825d911610203578063173825d9146102f2578063177ed0f3146103145780631a092541146103345780631abe7cb3146103495780632f54bf6e1461036957600080fd5b80630118173c14610235578063031f5c871461027e5780630d8e6e2c1461029e57806316bef596146102c0575b600080fd5b34801561024157600080fd5b5061026b61025036600461199f565b6001600160a01b03166000908152600c602052604090205490565b6040519081526020015b60405180910390f35b34801561028a57600080fd5b5061026b610299366004611a67565b61078f565b3480156102aa57600080fd5b506102b36107b7565b6040516102759190611c28565b3480156102cc57600080fd5b506007546001600160a01b03165b6040516001600160a01b039091168152602001610275565b3480156102fe57600080fd5b5061031261030d36600461199f565b6107d7565b005b34801561032057600080fd5b5061026b61032f366004611b21565b61089d565b34801561034057600080fd5b506102b36108bc565b34801561035557600080fd5b50610312610364366004611b39565b61094e565b34801561037557600080fd5b506103a261038436600461199f565b6001600160a01b031660009081526020819052604090205460ff1690565b6040519015158152602001610275565b3480156103be57600080fd5b506103126103cd366004611a10565b610987565b3480156103de57600080fd5b506103126103ed36600461199f565b6109d8565b3480156103fe57600080fd5b5061031261040d36600461199f565b610a1f565b34801561041e57600080fd5b5061031261042d3660046119c2565b610ad0565b34801561043e57600080fd5b5061031261044d366004611b21565b610b05565b34801561045e57600080fd5b50600e5461026b565b34801561047357600080fd5b506103a261048236600461199f565b6003546001600160a01b0391821691161490565b3480156104a257600080fd5b506103126104b1366004611b39565b610b31565b3480156104c257600080fd5b506102b36104d136600461199f565b610b6f565b3480156104e257600080fd5b506103126104f136600461199f565b610ca9565b34801561050257600080fd5b50610312610511366004611b92565b610d6e565b34801561052257600080fd5b5061052b610dab565b6040516102759190611bdb565b610312610546366004611b5a565b610e0c565b34801561055757600080fd5b50610312610566366004611b39565b610e85565b34801561057757600080fd5b50610312610586366004611ae6565b610ebe565b34801561059757600080fd5b5061052b610ef8565b3480156105ac57600080fd5b5061026b6105bb366004611b21565b60009081526005602052604090205490565b3480156105d957600080fd5b506103126105e836600461199f565b610f58565b3480156105f957600080fd5b5061031261060836600461199f565b611012565b34801561061957600080fd5b506103a261062836600461199f565b6001600160a01b031660009081526008602052604090205460ff1690565b34801561065257600080fd5b50610312610661366004611a67565b61108f565b34801561067257600080fd5b506003546001600160a01b03166102da565b34801561069057600080fd5b50600a546001600160a01b03166102da565b3480156106ae57600080fd5b506103126106bd366004611b5a565b61113c565b3480156106ce57600080fd5b506103126106dd366004611a92565b611197565b3480156106ee57600080fd5b506103126106fd36600461199f565b6111e4565b34801561070e57600080fd5b5061026b61071d366004611b21565b60009081526004602052604090205490565b34801561073b57600080fd5b5061031261074a36600461199f565b611229565b34801561075b57600080fd5b506103a261076a36600461199f565b611272565b34801561077b57600080fd5b5061031261078a3660046119c2565b6112d3565b6001600160a01b03919091166000908152600660209081526040808320938352929052205490565b60606040518060600160405280602a8152602001611dca602a9139905090565b6107e26103846113a8565b6108075760405162461bcd60e51b81526004016107fe90611c7b565b60405180910390fd5b6001600160a01b03811660009081526020819052604090205460ff1661086f5760405162461bcd60e51b815260206004820152601e60248201527f5461726765742061646472657373206973206e6f7420616e206f776e6572000060448201526064016107fe565b6001600160a01b0381166000908152602081905260409020805460ff1916905561089a6001826113dc565b50565b6007546000906108b6906001600160a01b03168361078f565b92915050565b6060600280546108cb90611d32565b80601f01602080910402602001604051908101604052809291908181526020018280546108f790611d32565b80156109445780601f1061091957610100808354040283529160200191610944565b820191906000526020600020905b81548152906001019060200180831161092757829003601f168201915b5050505050905090565b6109596103846113a8565b6109755760405162461bcd60e51b81526004016107fe90611c7b565b60009182526004602052604090912055565b6109926103846113a8565b6109ae5760405162461bcd60e51b81526004016107fe90611c7b565b6109b8838361151e565b6001600160a01b039092166000908152600c602052604090209190915550565b6109e36103846113a8565b6109ff5760405162461bcd60e51b81526004016107fe90611c7b565b600780546001600160a01b0319166001600160a01b03831617905561089a815b610a2a6103846113a8565b610a465760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b03811660009081526008602052604090205460ff1615610a6a5750565b6001600160a01b03166000818152600860205260408120805460ff191660019081179091556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319169091179055565b610adb6103846113a8565b610af75760405162461bcd60e51b81526004016107fe90611c7b565b610b01828261151e565b5050565b610b106103846113a8565b610b2c5760405162461bcd60e51b81526004016107fe90611c7b565b600e55565b610b3c6103846113a8565b610b585760405162461bcd60e51b81526004016107fe90611c7b565b600754610b01906001600160a01b03168383611197565b6040516378bfd22760e11b81526001600160a01b0382166004820152606090309063f17fa44e9060240160206040518083038186803b158015610bb157600080fd5b505afa158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190611ac6565b610c0157505060408051602081019091526000815290565b6001600160a01b0382166000908152600d602052604090208054610c2490611d32565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5090611d32565b8015610c9d5780601f10610c7257610100808354040283529160200191610c9d565b820191906000526020600020905b815481529060010190602001808311610c8057829003601f168201915b50505050509050919050565b60015415801590610cca57503360009081526020819052604090205460ff16155b15610ce75760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b03811660009081526020819052604090205460ff1615610d0b5750565b6001600160a01b03166000818152602081905260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b60405162461bcd60e51b815260206004820152601260248201527113d4115490551253d397d11254d05093115160721b60448201526064016107fe565b6060600980548060200260200160405190810160405280929190818152602001828054801561094457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610de5575050505050905090565b610e1581611272565b15610e5b5760405162461bcd60e51b81526020600482015260166024820152750414c52454144595f4841535f4d454d424552534849560541b60448201526064016107fe565b610e67600060016115df565b610e80816040518060200160405280600081525061151e565b505050565b610e906103846113a8565b610eac5760405162461bcd60e51b81526004016107fe90611c7b565b60009182526005602052604090912055565b610ec96103846113a8565b610ee55760405162461bcd60e51b81526004016107fe90611c7b565b8051610b0190600290602084019061187f565b60606001805480602002602001604051908101604052809291908181526020018280548015610944576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610de5575050505050905090565b610f636103846113a8565b610f7f5760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b03811660009081526008602052604090205460ff16610fe75760405162461bcd60e51b815260206004820181905260248201527f54617267657420636f6e7472616374206973206e6f7420617661696c61626c6560448201526064016107fe565b6001600160a01b0381166000908152600860205260409020805460ff1916905561089a6009826113dc565b61101d6103846113a8565b6110395760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b0381166000818152600b60209081526040808320805460ff19169055600c909152808220829055517fb06142a803b635c046318ced2e53320bc58e5d67cd8a097a74abebb81ea4a23f9190a250565b61109a6103846113a8565b6110b65760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b0382166000908152600b602052604090205460ff16611120576001600160a01b0382166000818152600b6020526040808220805460ff19166001179055517f893e16c93d8f47d85366f981752a56e333030c5450f51db6c8136ec34e28c7c09190a25b6001600160a01b039091166000908152600c6020526040902055565b61114581611272565b1561118b5760405162461bcd60e51b81526020600482015260166024820152750414c52454144595f4841535f4d454d424552534849560541b60448201526064016107fe565b610e67600060016116d3565b6111a26103846113a8565b6111be5760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b0390921660009081526006602090815260408083209383529290522055565b6111ef6103846113a8565b61120b5760405162461bcd60e51b81526004016107fe90611c7b565b600380546001600160a01b0319166001600160a01b03831617905550565b6112346103846113a8565b6112505760405162461bcd60e51b81526004016107fe90611c7b565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600b602052604081205460ff1680156108b657506001600160a01b0382166000908152600c602052604090205415806108b65750506001600160a01b03166000908152600c6020526040902054421090565b6112de6103846113a8565b6112fa5760405162461bcd60e51b81526004016107fe90611c7b565b6040516378bfd22760e11b81526001600160a01b0383166004820152309063f17fa44e9060240160206040518083038186803b15801561133957600080fd5b505afa15801561134d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113719190611ac6565b61137f57610b018282610ad0565b6001600160a01b0382166000908152600d602090815260409091208251610e809284019061187f565b6000601436108015906113c557506003546001600160a01b031633145b156113d7575060131936013560601c90565b503390565b60005b8254811015610e8057816001600160a01b031683828154811061141257634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561150c578254839061143d90600190611d1b565b8154811061145b57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031683828154811061149957634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828054806114e557634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b8061151681611d6d565b9150506113df565b6001600160a01b0382166000908152600b60209081526040808320805460ff19166001179055600d825290912082516115599284019061187f565b50600e541561158d57600e5461156f9042611ce4565b6001600160a01b0383166000908152600c60205260409020556115a7565b6001600160a01b0382166000908152600c60205260408120555b6040516001600160a01b038316907f893e16c93d8f47d85366f981752a56e333030c5450f51db6c8136ec34e28c7c090600090a25050565b6000828152600560205260408120541161160b5760405162461bcd60e51b81526004016107fe90611cbd565b600a546001600160a01b03166116335760405162461bcd60e51b81526004016107fe90611cbd565b60008281526005602052604081205461164d908390611cfc565b9050803410156116945760405162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f56414c554560701b60448201526064016107fe565b600a546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156116cd573d6000803e3d6000fd5b50505050565b6007546001600160a01b0316600081815260086020526040902054610b0191849184919060ff166117465760405162461bcd60e51b815260206004820152601f60248201527f43555252454e43595f434f4e54524143545f4e4f545f535550504f525445440060448201526064016107fe565b6000611752828561078f565b1161176f5760405162461bcd60e51b81526004016107fe90611cbd565b600a546001600160a01b03166117975760405162461bcd60e51b81526004016107fe90611cbd565b6001600160a01b0381166117bd5760405162461bcd60e51b81526004016107fe90611cbd565b60006117c9828561078f565b6117d39084611cfc565b9050816001600160a01b0381166323b872dd6117ed6113a8565b600a5460405160e084901b6001600160e01b03191681526001600160a01b0392831660048201529116602482015260448101859052606401602060405180830381600087803b15801561183f57600080fd5b505af1158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190611ac6565b505050505050565b82805461188b90611d32565b90600052602060002090601f0160209004810192826118ad57600085556118f3565b82601f106118c657805160ff19168380011785556118f3565b828001600101855582156118f3579182015b828111156118f35782518255916020019190600101906118d8565b506118ff929150611903565b5090565b5b808211156118ff5760008155600101611904565b600082601f830112611928578081fd5b813567ffffffffffffffff8082111561194357611943611d9e565b604051601f8301601f19908116603f0116810190828211818310171561196b5761196b611d9e565b81604052838152866020858801011115611983578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156119b0578081fd5b81356119bb81611db4565b9392505050565b600080604083850312156119d4578081fd5b82356119df81611db4565b9150602083013567ffffffffffffffff8111156119fa578182fd5b611a0685828601611918565b9150509250929050565b600080600060608486031215611a24578081fd5b8335611a2f81611db4565b9250602084013567ffffffffffffffff811115611a4a578182fd5b611a5686828701611918565b925050604084013590509250925092565b60008060408385031215611a79578182fd5b8235611a8481611db4565b946020939093013593505050565b600080600060608486031215611aa6578283fd5b8335611ab181611db4565b95602085013595506040909401359392505050565b600060208284031215611ad7578081fd5b815180151581146119bb578182fd5b600060208284031215611af7578081fd5b813567ffffffffffffffff811115611b0d578182fd5b611b1984828501611918565b949350505050565b600060208284031215611b32578081fd5b5035919050565b60008060408385031215611b4b578182fd5b50508035926020909101359150565b600080600060608486031215611b6e578283fd5b83359250602084013591506040840135611b8781611db4565b809150509250925092565b60008060008060808587031215611ba7578081fd5b84359350602085013592506040850135611bc081611db4565b91506060850135611bd081611db4565b939692955090935050565b6020808252825182820181905260009190848201906040850190845b81811015611c1c5783516001600160a01b031683529284019291840191600101611bf7565b50909695505050505050565b6000602080835283518082850152825b81811015611c5457858101830151858201604001528201611c38565b81811115611c655783604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604082015261371760f11b606082015260800190565b6020808252600d908201526c14d1531317d11254d050931151609a1b604082015260600190565b60008219821115611cf757611cf7611d88565b500190565b6000816000190483118215151615611d1657611d16611d88565b500290565b600082821015611d2d57611d2d611d88565b500390565b600181811c90821680611d4657607f821691505b60208210811415611d6757634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d8157611d81611d88565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461089a57600080fdfe53656c6c61626c654d657461646174614d656d62657273686970436f6e7472616374207620312e312e30a2646970667358221220d19ef69eaf1d3c09ca99df989f993e3707361bd9f832961a6f87ce5b36d97f0264736f6c63430008040033\",\r\n"
            + "  \"deployedBytecode\": \"0x6080604052600436106102305760003560e01c8063724e5c171161012e578063bb7b4036116100ab578063da7422281161006f578063da742228146106e2578063e1461f1214610702578063ec6be06e1461072f578063f17fa44e1461074f578063fb989cea1461076f57600080fd5b8063bb7b403614610646578063ce1b815f14610666578063d1eff89514610684578063d36223f1146106a2578063d93f5bed146106c257600080fd5b8063a0e67e2b116100f2578063a0e67e2b1461058b578063adfadad3146105a0578063b33a599f146105cd578063b3d68181146105ed578063b68de9741461060d57600080fd5b8063724e5c17146104f65780638003e27f1461051657806380dc439e1461053857806388d0f86a1461054b57806390c3f38f1461056b57600080fd5b806338a8f569116101bc57806353c324771161018057806353c3247714610452578063572b6c0514610467578063578680be146104965780635b64bed0146104b65780637065cb48146104d657600080fd5b806338a8f569146103b25780633a932dba146103d25780633de4fdc8146103f2578063502ccb091461041257806351ae4cd31461043257600080fd5b8063173825d911610203578063173825d9146102f2578063177ed0f3146103145780631a092541146103345780631abe7cb3146103495780632f54bf6e1461036957600080fd5b80630118173c14610235578063031f5c871461027e5780630d8e6e2c1461029e57806316bef596146102c0575b600080fd5b34801561024157600080fd5b5061026b61025036600461199f565b6001600160a01b03166000908152600c602052604090205490565b6040519081526020015b60405180910390f35b34801561028a57600080fd5b5061026b610299366004611a67565b61078f565b3480156102aa57600080fd5b506102b36107b7565b6040516102759190611c28565b3480156102cc57600080fd5b506007546001600160a01b03165b6040516001600160a01b039091168152602001610275565b3480156102fe57600080fd5b5061031261030d36600461199f565b6107d7565b005b34801561032057600080fd5b5061026b61032f366004611b21565b61089d565b34801561034057600080fd5b506102b36108bc565b34801561035557600080fd5b50610312610364366004611b39565b61094e565b34801561037557600080fd5b506103a261038436600461199f565b6001600160a01b031660009081526020819052604090205460ff1690565b6040519015158152602001610275565b3480156103be57600080fd5b506103126103cd366004611a10565b610987565b3480156103de57600080fd5b506103126103ed36600461199f565b6109d8565b3480156103fe57600080fd5b5061031261040d36600461199f565b610a1f565b34801561041e57600080fd5b5061031261042d3660046119c2565b610ad0565b34801561043e57600080fd5b5061031261044d366004611b21565b610b05565b34801561045e57600080fd5b50600e5461026b565b34801561047357600080fd5b506103a261048236600461199f565b6003546001600160a01b0391821691161490565b3480156104a257600080fd5b506103126104b1366004611b39565b610b31565b3480156104c257600080fd5b506102b36104d136600461199f565b610b6f565b3480156104e257600080fd5b506103126104f136600461199f565b610ca9565b34801561050257600080fd5b50610312610511366004611b92565b610d6e565b34801561052257600080fd5b5061052b610dab565b6040516102759190611bdb565b610312610546366004611b5a565b610e0c565b34801561055757600080fd5b50610312610566366004611b39565b610e85565b34801561057757600080fd5b50610312610586366004611ae6565b610ebe565b34801561059757600080fd5b5061052b610ef8565b3480156105ac57600080fd5b5061026b6105bb366004611b21565b60009081526005602052604090205490565b3480156105d957600080fd5b506103126105e836600461199f565b610f58565b3480156105f957600080fd5b5061031261060836600461199f565b611012565b34801561061957600080fd5b506103a261062836600461199f565b6001600160a01b031660009081526008602052604090205460ff1690565b34801561065257600080fd5b50610312610661366004611a67565b61108f565b34801561067257600080fd5b506003546001600160a01b03166102da565b34801561069057600080fd5b50600a546001600160a01b03166102da565b3480156106ae57600080fd5b506103126106bd366004611b5a565b61113c565b3480156106ce57600080fd5b506103126106dd366004611a92565b611197565b3480156106ee57600080fd5b506103126106fd36600461199f565b6111e4565b34801561070e57600080fd5b5061026b61071d366004611b21565b60009081526004602052604090205490565b34801561073b57600080fd5b5061031261074a36600461199f565b611229565b34801561075b57600080fd5b506103a261076a36600461199f565b611272565b34801561077b57600080fd5b5061031261078a3660046119c2565b6112d3565b6001600160a01b03919091166000908152600660209081526040808320938352929052205490565b60606040518060600160405280602a8152602001611dca602a9139905090565b6107e26103846113a8565b6108075760405162461bcd60e51b81526004016107fe90611c7b565b60405180910390fd5b6001600160a01b03811660009081526020819052604090205460ff1661086f5760405162461bcd60e51b815260206004820152601e60248201527f5461726765742061646472657373206973206e6f7420616e206f776e6572000060448201526064016107fe565b6001600160a01b0381166000908152602081905260409020805460ff1916905561089a6001826113dc565b50565b6007546000906108b6906001600160a01b03168361078f565b92915050565b6060600280546108cb90611d32565b80601f01602080910402602001604051908101604052809291908181526020018280546108f790611d32565b80156109445780601f1061091957610100808354040283529160200191610944565b820191906000526020600020905b81548152906001019060200180831161092757829003601f168201915b5050505050905090565b6109596103846113a8565b6109755760405162461bcd60e51b81526004016107fe90611c7b565b60009182526004602052604090912055565b6109926103846113a8565b6109ae5760405162461bcd60e51b81526004016107fe90611c7b565b6109b8838361151e565b6001600160a01b039092166000908152600c602052604090209190915550565b6109e36103846113a8565b6109ff5760405162461bcd60e51b81526004016107fe90611c7b565b600780546001600160a01b0319166001600160a01b03831617905561089a815b610a2a6103846113a8565b610a465760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b03811660009081526008602052604090205460ff1615610a6a5750565b6001600160a01b03166000818152600860205260408120805460ff191660019081179091556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319169091179055565b610adb6103846113a8565b610af75760405162461bcd60e51b81526004016107fe90611c7b565b610b01828261151e565b5050565b610b106103846113a8565b610b2c5760405162461bcd60e51b81526004016107fe90611c7b565b600e55565b610b3c6103846113a8565b610b585760405162461bcd60e51b81526004016107fe90611c7b565b600754610b01906001600160a01b03168383611197565b6040516378bfd22760e11b81526001600160a01b0382166004820152606090309063f17fa44e9060240160206040518083038186803b158015610bb157600080fd5b505afa158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190611ac6565b610c0157505060408051602081019091526000815290565b6001600160a01b0382166000908152600d602052604090208054610c2490611d32565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5090611d32565b8015610c9d5780601f10610c7257610100808354040283529160200191610c9d565b820191906000526020600020905b815481529060010190602001808311610c8057829003601f168201915b50505050509050919050565b60015415801590610cca57503360009081526020819052604090205460ff16155b15610ce75760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b03811660009081526020819052604090205460ff1615610d0b5750565b6001600160a01b03166000818152602081905260408120805460ff191660019081179091558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b60405162461bcd60e51b815260206004820152601260248201527113d4115490551253d397d11254d05093115160721b60448201526064016107fe565b6060600980548060200260200160405190810160405280929190818152602001828054801561094457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610de5575050505050905090565b610e1581611272565b15610e5b5760405162461bcd60e51b81526020600482015260166024820152750414c52454144595f4841535f4d454d424552534849560541b60448201526064016107fe565b610e67600060016115df565b610e80816040518060200160405280600081525061151e565b505050565b610e906103846113a8565b610eac5760405162461bcd60e51b81526004016107fe90611c7b565b60009182526005602052604090912055565b610ec96103846113a8565b610ee55760405162461bcd60e51b81526004016107fe90611c7b565b8051610b0190600290602084019061187f565b60606001805480602002602001604051908101604052809291908181526020018280548015610944576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610de5575050505050905090565b610f636103846113a8565b610f7f5760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b03811660009081526008602052604090205460ff16610fe75760405162461bcd60e51b815260206004820181905260248201527f54617267657420636f6e7472616374206973206e6f7420617661696c61626c6560448201526064016107fe565b6001600160a01b0381166000908152600860205260409020805460ff1916905561089a6009826113dc565b61101d6103846113a8565b6110395760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b0381166000818152600b60209081526040808320805460ff19169055600c909152808220829055517fb06142a803b635c046318ced2e53320bc58e5d67cd8a097a74abebb81ea4a23f9190a250565b61109a6103846113a8565b6110b65760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b0382166000908152600b602052604090205460ff16611120576001600160a01b0382166000818152600b6020526040808220805460ff19166001179055517f893e16c93d8f47d85366f981752a56e333030c5450f51db6c8136ec34e28c7c09190a25b6001600160a01b039091166000908152600c6020526040902055565b61114581611272565b1561118b5760405162461bcd60e51b81526020600482015260166024820152750414c52454144595f4841535f4d454d424552534849560541b60448201526064016107fe565b610e67600060016116d3565b6111a26103846113a8565b6111be5760405162461bcd60e51b81526004016107fe90611c7b565b6001600160a01b0390921660009081526006602090815260408083209383529290522055565b6111ef6103846113a8565b61120b5760405162461bcd60e51b81526004016107fe90611c7b565b600380546001600160a01b0319166001600160a01b03831617905550565b6112346103846113a8565b6112505760405162461bcd60e51b81526004016107fe90611c7b565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600b602052604081205460ff1680156108b657506001600160a01b0382166000908152600c602052604090205415806108b65750506001600160a01b03166000908152600c6020526040902054421090565b6112de6103846113a8565b6112fa5760405162461bcd60e51b81526004016107fe90611c7b565b6040516378bfd22760e11b81526001600160a01b0383166004820152309063f17fa44e9060240160206040518083038186803b15801561133957600080fd5b505afa15801561134d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113719190611ac6565b61137f57610b018282610ad0565b6001600160a01b0382166000908152600d602090815260409091208251610e809284019061187f565b6000601436108015906113c557506003546001600160a01b031633145b156113d7575060131936013560601c90565b503390565b60005b8254811015610e8057816001600160a01b031683828154811061141257634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561150c578254839061143d90600190611d1b565b8154811061145b57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031683828154811061149957634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828054806114e557634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b8061151681611d6d565b9150506113df565b6001600160a01b0382166000908152600b60209081526040808320805460ff19166001179055600d825290912082516115599284019061187f565b50600e541561158d57600e5461156f9042611ce4565b6001600160a01b0383166000908152600c60205260409020556115a7565b6001600160a01b0382166000908152600c60205260408120555b6040516001600160a01b038316907f893e16c93d8f47d85366f981752a56e333030c5450f51db6c8136ec34e28c7c090600090a25050565b6000828152600560205260408120541161160b5760405162461bcd60e51b81526004016107fe90611cbd565b600a546001600160a01b03166116335760405162461bcd60e51b81526004016107fe90611cbd565b60008281526005602052604081205461164d908390611cfc565b9050803410156116945760405162461bcd60e51b8152602060048201526012602482015271494e53554646494349454e545f56414c554560701b60448201526064016107fe565b600a546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156116cd573d6000803e3d6000fd5b50505050565b6007546001600160a01b0316600081815260086020526040902054610b0191849184919060ff166117465760405162461bcd60e51b815260206004820152601f60248201527f43555252454e43595f434f4e54524143545f4e4f545f535550504f525445440060448201526064016107fe565b6000611752828561078f565b1161176f5760405162461bcd60e51b81526004016107fe90611cbd565b600a546001600160a01b03166117975760405162461bcd60e51b81526004016107fe90611cbd565b6001600160a01b0381166117bd5760405162461bcd60e51b81526004016107fe90611cbd565b60006117c9828561078f565b6117d39084611cfc565b9050816001600160a01b0381166323b872dd6117ed6113a8565b600a5460405160e084901b6001600160e01b03191681526001600160a01b0392831660048201529116602482015260448101859052606401602060405180830381600087803b15801561183f57600080fd5b505af1158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190611ac6565b505050505050565b82805461188b90611d32565b90600052602060002090601f0160209004810192826118ad57600085556118f3565b82601f106118c657805160ff19168380011785556118f3565b828001600101855582156118f3579182015b828111156118f35782518255916020019190600101906118d8565b506118ff929150611903565b5090565b5b808211156118ff5760008155600101611904565b600082601f830112611928578081fd5b813567ffffffffffffffff8082111561194357611943611d9e565b604051601f8301601f19908116603f0116810190828211818310171561196b5761196b611d9e565b81604052838152866020858801011115611983578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156119b0578081fd5b81356119bb81611db4565b9392505050565b600080604083850312156119d4578081fd5b82356119df81611db4565b9150602083013567ffffffffffffffff8111156119fa578182fd5b611a0685828601611918565b9150509250929050565b600080600060608486031215611a24578081fd5b8335611a2f81611db4565b9250602084013567ffffffffffffffff811115611a4a578182fd5b611a5686828701611918565b925050604084013590509250925092565b60008060408385031215611a79578182fd5b8235611a8481611db4565b946020939093013593505050565b600080600060608486031215611aa6578283fd5b8335611ab181611db4565b95602085013595506040909401359392505050565b600060208284031215611ad7578081fd5b815180151581146119bb578182fd5b600060208284031215611af7578081fd5b813567ffffffffffffffff811115611b0d578182fd5b611b1984828501611918565b949350505050565b600060208284031215611b32578081fd5b5035919050565b60008060408385031215611b4b578182fd5b50508035926020909101359150565b600080600060608486031215611b6e578283fd5b83359250602084013591506040840135611b8781611db4565b809150509250925092565b60008060008060808587031215611ba7578081fd5b84359350602085013592506040850135611bc081611db4565b91506060850135611bd081611db4565b939692955090935050565b6020808252825182820181905260009190848201906040850190845b81811015611c1c5783516001600160a01b031683529284019291840191600101611bf7565b50909695505050505050565b6000602080835283518082850152825b81811015611c5457858101830151858201604001528201611c38565b81811115611c655783604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604082015261371760f11b606082015260800190565b6020808252600d908201526c14d1531317d11254d050931151609a1b604082015260600190565b60008219821115611cf757611cf7611d88565b500190565b6000816000190483118215151615611d1657611d16611d88565b500290565b600082821015611d2d57611d2d611d88565b500390565b600181811c90821680611d4657607f821691505b60208210811415611d6757634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d8157611d81611d88565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461089a57600080fdfe53656c6c61626c654d657461646174614d656d62657273686970436f6e7472616374207620312e312e30a2646970667358221220d19ef69eaf1d3c09ca99df989f993e3707361bd9f832961a6f87ce5b36d97f0264736f6c63430008040033";

    public static final String FUNC_ADDAVAILABLECURRENCYTOKENCONTRACT = "addAvailableCurrencyTokenContract";

    public static final String FUNC_ADDMEMBERSHIP = "addMembership";

    public static final String FUNC_ADDMEMBERSHIPWITHEXPIRATION = "addMembershipWithExpiration";

    public static final String FUNC_ADDOWNER = "addOwner";

    public static final String FUNC_BUYWITHETHER = "buyWithEther";

    public static final String FUNC_buyWithToken = "buyWithToken";

    public static final String FUNC_CONFIRMMEMBERSHIP = "confirmMembership";

    public static final String FUNC_GETAVAILABLECURRENCYTOKENCONTRACTSLIST = "getAvailableCurrencyTokenContractsList";

    public static final String FUNC_GETBENEFICIARYADDRESS = "getBeneficiaryAddress";

    public static final String FUNC_GETDEFAULTCURRENCYTOKENCONTRACT = "getDefaultCurrencyTokenContract";

    public static final String FUNC_GETDEFAULTEXPIRATION = "getDefaultExpiration";

    public static final String FUNC_GETDESCRIPTION = "getDescription";

    public static final String FUNC_GETMEMBERSHIPEXPIRATION = "getMembershipExpiration";

    public static final String FUNC_GETMEMBERSHIPMETADATA = "getMembershipMetadata";

    public static final String FUNC_GETOWNERS = "getOwners";

    public static final String FUNC_GETPRICEETHER = "getPriceEther";

    public static final String FUNC_GETPRICEFIAT = "getPriceFiat";

    public static final String FUNC_getPriceToken = "getPriceToken";

    public static final String FUNC_GETTRUSTEDFORWARDER = "getTrustedForwarder";

    public static final String FUNC_GETVERSION = "getVersion";

    public static final String FUNC_ISAVAILABLECURRENCYTOKENCONTRACT = "isAvailableCurrencyTokenContract";

    public static final String FUNC_ISOWNER = "isOwner";

    public static final String FUNC_ISTRUSTEDFORWARDER = "isTrustedForwarder";

    public static final String FUNC_REMOVEAVAILABLECURRENCYTOKENCONTRACT = "removeAvailableCurrencyTokenContract";

    public static final String FUNC_REMOVEMEMBERSHIP = "removeMembership";

    public static final String FUNC_REMOVEOWNER = "removeOwner";

    public static final String FUNC_SETBENEFICIARYADDRESS = "setBeneficiaryAddress";

    public static final String FUNC_SETDEFAULTCURRENCYTOKENCONTRACTADDRESS = "setDefaultCurrencyTokenContractAddress";

    public static final String FUNC_SETDEFAULTEXPIRATION = "setDefaultExpiration";

    public static final String FUNC_SETDESCRIPTION = "setDescription";

    public static final String FUNC_SETMEMBERSHIPEXPIRATION = "setMembershipExpiration";

    public static final String FUNC_SETMEMBERSHIPMETADATA = "setMembershipMetadata";

    public static final String FUNC_SETPRICEETHER = "setPriceEther";

    public static final String FUNC_SETPRICEFIAT = "setPriceFiat";

    public static final String FUNC_setPriceToken = "setPriceToken";

    public static final String FUNC_SETTRUSTEDFORWARDER = "setTrustedForwarder";

    public static final Event MEMBERSHIPADDED_EVENT = new Event("MembershipAdded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event MEMBERSHIPREMOVED_EVENT = new Event("MembershipRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    @Deprecated
    protected SellableMetadataMembershipContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected SellableMetadataMembershipContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected SellableMetadataMembershipContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected SellableMetadataMembershipContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<MembershipAddedEventResponse> getMembershipAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(MEMBERSHIPADDED_EVENT, transactionReceipt);
        ArrayList<MembershipAddedEventResponse> responses = new ArrayList<MembershipAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MembershipAddedEventResponse typedResponse = new MembershipAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.target = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MembershipAddedEventResponse> membershipAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MembershipAddedEventResponse>() {
            @Override
            public MembershipAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MEMBERSHIPADDED_EVENT, log);
                MembershipAddedEventResponse typedResponse = new MembershipAddedEventResponse();
                typedResponse.log = log;
                typedResponse.target = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MembershipAddedEventResponse> membershipAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MEMBERSHIPADDED_EVENT));
        return membershipAddedEventFlowable(filter);
    }

    public static List<MembershipRemovedEventResponse> getMembershipRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(MEMBERSHIPREMOVED_EVENT, transactionReceipt);
        ArrayList<MembershipRemovedEventResponse> responses = new ArrayList<MembershipRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            MembershipRemovedEventResponse typedResponse = new MembershipRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.target = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<MembershipRemovedEventResponse> membershipRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, MembershipRemovedEventResponse>() {
            @Override
            public MembershipRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MEMBERSHIPREMOVED_EVENT, log);
                MembershipRemovedEventResponse typedResponse = new MembershipRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.target = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<MembershipRemovedEventResponse> membershipRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MEMBERSHIPREMOVED_EVENT));
        return membershipRemovedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addAvailableCurrencyTokenContract(String contractAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDAVAILABLECURRENCYTOKENCONTRACT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, contractAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMembership(String customerAddress, String metadata) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMEMBERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, customerAddress), 
                new org.web3j.abi.datatypes.Utf8String(metadata)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addMembershipWithExpiration(String customerAddress, String metadata, BigInteger timestamp) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMEMBERSHIPWITHEXPIRATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, customerAddress), 
                new org.web3j.abi.datatypes.Utf8String(metadata), 
                new org.web3j.abi.datatypes.generated.Uint256(timestamp)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addOwner(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> buyWithEther(BigInteger tokenId, BigInteger requestedAmount, String recipient, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BUYWITHETHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId), 
                new org.web3j.abi.datatypes.generated.Uint256(requestedAmount), 
                new org.web3j.abi.datatypes.Address(160, recipient)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<TransactionReceipt> buyWithToken(BigInteger tokenId, BigInteger requestedAmount, String recipient, String currencyTokenContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_buyWithToken, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId), 
                new org.web3j.abi.datatypes.generated.Uint256(requestedAmount), 
                new org.web3j.abi.datatypes.Address(160, recipient), 
                new org.web3j.abi.datatypes.Address(160, currencyTokenContract)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> buyWithToken(BigInteger tokenId, BigInteger requestedAmount, String recipient) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_buyWithToken, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(tokenId), 
                new org.web3j.abi.datatypes.generated.Uint256(requestedAmount), 
                new org.web3j.abi.datatypes.Address(160, recipient)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> confirmMembership(String customerAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_CONFIRMMEMBERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, customerAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<List> getAvailableCurrencyTokenContractsList() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETAVAILABLECURRENCYTOKENCONTRACTSLIST, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<String> getBeneficiaryAddress() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETBENEFICIARYADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getDefaultCurrencyTokenContract() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETDEFAULTCURRENCYTOKENCONTRACT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getDefaultExpiration() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETDEFAULTEXPIRATION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getDescription() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETDESCRIPTION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getMembershipExpiration(String customerAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEMBERSHIPEXPIRATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, customerAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getMembershipMetadata(String customerAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETMEMBERSHIPMETADATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, customerAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<List> getOwners() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETOWNERS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getPriceEther(BigInteger id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRICEETHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getPriceFiat(BigInteger id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRICEFIAT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getPriceToken(String currencyContract, BigInteger id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_getPriceToken, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, currencyContract), 
                new org.web3j.abi.datatypes.generated.Uint256(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getPriceToken(BigInteger id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_getPriceToken, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getTrustedForwarder() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETTRUSTEDFORWARDER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getVersion() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETVERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> isAvailableCurrencyTokenContract(String contractAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISAVAILABLECURRENCYTOKENCONTRACT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, contractAddress)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isOwner(String addr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isTrustedForwarder(String forwarder) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISTRUSTEDFORWARDER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, forwarder)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> removeAvailableCurrencyTokenContract(String contractAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEAVAILABLECURRENCYTOKENCONTRACT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, contractAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removeMembership(String customerAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEMEMBERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, customerAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removeOwner(String owner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEOWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, owner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setBeneficiaryAddress(String addr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETBENEFICIARYADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setDefaultCurrencyTokenContractAddress(String tokenContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETDEFAULTCURRENCYTOKENCONTRACTADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, tokenContract)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setDefaultExpiration(BigInteger time) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETDEFAULTEXPIRATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(time)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setDescription(String description) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETDESCRIPTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setMembershipExpiration(String customerAddress, BigInteger timestamp) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETMEMBERSHIPEXPIRATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, customerAddress), 
                new org.web3j.abi.datatypes.generated.Uint256(timestamp)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setMembershipMetadata(String customerAddress, String metadata) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETMEMBERSHIPMETADATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, customerAddress), 
                new org.web3j.abi.datatypes.Utf8String(metadata)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPriceEther(BigInteger id, BigInteger price) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPRICEETHER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id), 
                new org.web3j.abi.datatypes.generated.Uint256(price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPriceFiat(BigInteger id, BigInteger price) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPRICEFIAT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id), 
                new org.web3j.abi.datatypes.generated.Uint256(price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPriceToken(BigInteger id, BigInteger price) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_setPriceToken, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id), 
                new org.web3j.abi.datatypes.generated.Uint256(price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPriceToken(String currencyContract, BigInteger id, BigInteger price) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_setPriceToken, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, currencyContract), 
                new org.web3j.abi.datatypes.generated.Uint256(id), 
                new org.web3j.abi.datatypes.generated.Uint256(price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setTrustedForwarder(String _forwarder) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETTRUSTEDFORWARDER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _forwarder)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static SellableMetadataMembershipContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SellableMetadataMembershipContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static SellableMetadataMembershipContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SellableMetadataMembershipContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static SellableMetadataMembershipContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new SellableMetadataMembershipContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static SellableMetadataMembershipContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new SellableMetadataMembershipContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<SellableMetadataMembershipContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(SellableMetadataMembershipContract.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<SellableMetadataMembershipContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(SellableMetadataMembershipContract.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SellableMetadataMembershipContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SellableMetadataMembershipContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SellableMetadataMembershipContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SellableMetadataMembershipContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class MembershipAddedEventResponse extends BaseEventResponse {
        public String target;
    }

    public static class MembershipRemovedEventResponse extends BaseEventResponse {
        public String target;
    }
}
